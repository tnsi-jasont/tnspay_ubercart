<?php
/**
 * @file 
 * A module that enables the TNSPay API Payment gateway to be integrated into Ubercart Payments.
 */

/**
 * Implements hook_uc_payment_gateway() * 
 */
function tnspay_ubercart_uc_payment_gateway() {
  $gateways['tnspay'] = array(
    'title' => t('TNSPay Gateway'),
    'description' => t('Process credit card payments through the TNSPay gateway.'),
    'settings' => 'tnspay_ubercart_settings_form',
    'credit' => 'tnspay_ubercart_process_transaction',
  );
  return $gateways;
}
  
/**
 * Function for building the settings form 
 * 
 * We're starting with the basic 2-party game... 
 */
function tnspay_ubercart_settings_form($form, &$form_state) {
  // Decrypt the sensitive stuff before we display the form... 
  /**
   * @todo Do the decryption of sensitive values at the start of this form
   */
  
  // Section for setting the base URL and version of the API - might add test v live here also
  $form['api_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('API URL and Version'),
      '#description' => t('This information is required for Ubercart to interact with the TNS Payment gateway.  It allows you to choose the version of the gateway or customise it to a specific URL if needed.'),
  );
  // Set the base URLs
  /**
   * @todo Write a warning about messing with the URLs...
   */
  $form['api_settings']['tnspay_ubercart_api_URI_live'] = array(
      '#type' => 'textfield',
      '#title' => t('URL for the live gateway.'),
      '#default_value' => variable_get('tnspay_ubercart_api_URI_live','https://secure.ap.tnspayments.com/api/rest'),
  ); 
  
  $form['api_settings']['tnspay_ubercart_api_URI_test'] = array(
      '#type' => 'textfield',
      '#title' => t('URL for the test gateway.'),
      '#default_value' => variable_get('tnspay_ubercart_api_URI_test','https://secure.ap.tnspayments.com/api/rest'),
  ); 
  // Set Live vs Test
  $form['api_settings']['tnspay_ubercart_api_mode'] = array(
      '#type' => 'radios',
      '#title' => t('TNSPay gateway mode.'),
      '#description' => t('WARNING - Operating in Test mode will not ever complete a real transaction. No money will be deducted'),
      '#options' => array(
          'Live' => t('Live Mode - Transactions will be processed against the card'),
          'Test' => t('Test Mode - Transactions WILL NOT be processed against the card'),
      ),
      '#default_value' => variable_get('tnspay_ubercart_api_mode','Live'),
  );
  
  // Set the version that you're in 
  $form['api_settings']['tnspay_ubercart_api_version'] = array(
      '#type' => 'select',
      '#title' => t('API Version'),
      '#description' => t('The version of the API that you want to connect to. Only supported versions are available'),
      '#options' => drupal_map_assoc(array(6, 7)),
      '#default_value' => variable_get('tnspay_ubercart_api_version', '7'),
  );
  
  // Section for managing merchant details
  $form['merchant_settings'] = array( 
      '#type' => 'fieldset',
      '#title' => t('Merchant Settings'),
      '#description' => t('Manage the merchant ID that was provided to you by TNS.'),
  );
  
  // Set the merchant ID
  /**
   * @todo Set some formatting/length about this field  
   */
  $form['merchant_settings']['tnspay_ubercart_merchant_id'] = array(
      '#type' => 'textfield', 
      '#title' => t('Merchant ID'),
      '#description' => t('The Merchant ID supplied to you by TNS.'),
      '#default_value' => variable_get('tnspay_ubercart_merchant_id',''),      
  );  
  
  // Section for managing authentication process
  $form['authentication_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Authentication Settings'),
      '#description' => t('Set the authentication method that you will use to identify yourself to the TNSPay gateway.  If you are not using a certificate you will need to provide a password which will be stored securely'),
  );
  
  // Choose the authentication method - 2 way SSL or Password
  $form['authentication_settings']['tnspay_ubercart_authentication_method'] = array(
      '#type' => 'radios',
      '#title' => t('Authentication Method:'),
      '#options' => array(
          'certificate' => t('Certificate'),
          'password' => t('Integration Authentication Password'),
          ),
      '#default_value' => variable_get('tnspay_ubercart_authentication_method', 'password'),
  );
  
  // If password is chosen - make this mandatory... 
  /**
   * @todo Set some length parameters etc around the integration password field.
   */
  $form['authentication_settings']['tnspay_ubercart_integration_password_1'] = array(
      '#type' => 'textfield',
      '#title' => t('Integration Authentication Password 1'),
      '#description' => t('The Integration Authentication Password 1 value supplied by TNSi'),
      '#default_value' => variable_get('tnspay_ubercart_integration_password_1'),
      '#required' => (variable_get('tnspay_ubercart_authentication_method') == 'password'? TRUE: FALSE),
  );
  
  // Send the form back to Drupal..
  return($form);
}

/**
 * Function to intercept the save mechanism to allow us to secure sensitive data.
 */

/**
 * Function for actually processing the transaction against the gateway 
 */
function tnspay_ubercart_process_transaction() {
  // Do nothing for the moment...
}

/**
 * Function for encrpypting and decrpyting the sensitive stuff
 */
function _tnspay_ubercart_encryption() {
  
}